{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_class_extract_field_descriptor.js","node_modules/@swc/helpers/lib/_class_apply_descriptor_get.js","node_modules/@swc/helpers/lib/_check_private_redeclaration.js","node_modules/@swc/helpers/lib/_class_apply_descriptor_set.js","node_modules/@swc/helpers/lib/_define_property.js","node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_class_private_field_get.js","node_modules/@swc/helpers/lib/_class_private_field_init.js","node_modules/@swc/helpers/lib/_class_private_field_set.js","node_modules/@swc/helpers/lib/_create_class.js","node_modules/@swc/helpers/lib/_object_spread.js","node_modules/@swc/helpers/lib/_type_of.js","node_modules/localforage/dist/localforage.js","node_modules/uuid/dist/esm-browser/native.js","node_modules/uuid/dist/esm-browser/rng.js","node_modules/uuid/dist/esm-browser/stringify.js","node_modules/uuid/dist/esm-browser/v4.js","src/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classExtractFieldDescriptor;\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n    }\n    return privateMap.get(receiver);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classApplyDescriptorGet;\nfunction _classApplyDescriptorGet(receiver, descriptor) {\n    if (descriptor.get) {\n        return descriptor.get.call(receiver);\n    }\n    return descriptor.value;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _checkPrivateRedeclaration;\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n    if (privateCollection.has(obj)) {\n        throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classApplyDescriptorSet;\nfunction _classApplyDescriptorSet(receiver, descriptor, value) {\n    if (descriptor.set) {\n        descriptor.set.call(receiver, value);\n    } else {\n        if (!descriptor.writable) {\n            // This should only throw in strict mode, but class bodies are\n            // always strict and private fields can only be used inside\n            // class bodies.\n            throw new TypeError(\"attempted to set read only private field\");\n        }\n        descriptor.value = value;\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateFieldGet;\nvar _classExtractFieldDescriptor = _interopRequireDefault(require(\"./_class_extract_field_descriptor\"));\nvar _classApplyDescriptorGet = _interopRequireDefault(require(\"./_class_apply_descriptor_get\"));\nfunction _classPrivateFieldGet(receiver, privateMap) {\n    var descriptor = (0, _classExtractFieldDescriptor).default(receiver, privateMap, \"get\");\n    return (0, _classApplyDescriptorGet).default(receiver, descriptor);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateFieldInit;\nvar _checkPrivateRedeclaration = _interopRequireDefault(require(\"./_check_private_redeclaration\"));\nfunction _classPrivateFieldInit(obj, privateMap, value) {\n    (0, _checkPrivateRedeclaration).default(obj, privateMap);\n    privateMap.set(obj, value);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateFieldSet;\nvar _classExtractFieldDescriptor = _interopRequireDefault(require(\"./_class_extract_field_descriptor\"));\nvar _classApplyDescriptorSet = _interopRequireDefault(require(\"./_class_apply_descriptor_set\"));\nfunction _classPrivateFieldSet(receiver, privateMap, value) {\n    var descriptor = (0, _classExtractFieldDescriptor).default(receiver, privateMap, \"set\");\n    (0, _classApplyDescriptorSet).default(receiver, descriptor, value);\n    return value;\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _objectSpread;\nvar _defineProperty = _interopRequireDefault(require(\"./_define_property\"));\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === 'function') {\n            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n            }));\n        }\n        ownKeys.forEach(function(key) {\n            (0, _defineProperty).default(target, key, source[key]);\n        });\n    }\n    return target;\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _typeof;\nfunction _typeof(obj) {\n    \"@swc/helpers - typeof\";\n    return obj && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n}\n;\n","/*!\n    localForage -- Offline Storage, Improved\n    Version 1.10.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb || !idb.open) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support\n        // (see: https://github.com/pouchdb/pouchdb/issues/5572).\n        // Safari 10.1 shipped with fetch, we can use that to detect it.\n        // Note: this creates issues with `window.fetch` polyfills and\n        // overrides; see:\n        // https://github.com/localForage/localForage/issues/856\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            var db = openreq.result;\n            db.onversionchange = function (e) {\n                // Triggered when the database is modified (e.g. adding an objectStore) or\n                // deleted (even when initiated by other sessions in different tabs).\n                // Closing the connection here prevents those operations from being blocked.\n                // If the database is accessed again later by this instance, the connection\n                // will be reopened or the database recreated as needed.\n                e.target.close();\n            };\n            resolve(db);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback returns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openKeyCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openKeyCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(req.error);\n                    };\n\n                    req.onblocked = function () {\n                        // Closing all open connections in onversionchange handler should prevent this situation, but if\n                        // we do get here, it just means the request remains pending - eventually it will succeed or error\n                        console.warn('dropInstance blocked for database \"' + options.name + '\" until all open connections are closed');\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import * as localForage from 'localforage';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass Queue {\n  #SomeFifoName;\n  constructor(SomeFifoName) {\n    this.#SomeFifoName = SomeFifoName;\n    const id = uuidv4();\n    const elementId = `${this.#SomeFifoName}Element-${id}`;\n    const getStorage = () => {\n      return localForage.getItem(this.#SomeFifoName);\n    };\n    //fix null value - does not goes through this step\n    if (!getStorage(this.#SomeFifoName)) {\n      localForage.setItem(this.#SomeFifoName, {\n        [`${this.#SomeFifoName}Head`]: elementId,\n        [`${elementId}-next`]: '',\n        [`${elementId}-prev`]: '',\n        [`${elementId}-value`]: elementId,\n        [`${this.#SomeFifoName}Tail`]: elementId,\n        [`${this.#SomeFifoName}LastIndex`]: id,\n      });\n    } else {\n      const getLastIndex = () => {\n        getStorage(this.#SomeFifoName).then(\n          res => res[`${this.#SomeFifoName}LastIndex`]\n        );\n      };\n      localForage.setItem(this.#SomeFifoName, {\n        ...localForage.getItem(this.#SomeFifoName),\n        [`${this.#SomeFifoName}Head`]: elementId,\n        [`${elementId}-next`]: '',\n        [`${elementId}-prev`]: getLastIndex(),\n        [`${elementId}-value`]: elementId,\n        [`${this.#SomeFifoName}LastIndex`]: id,\n      });\n    }\n  }\n  push_head(element) {\n    getStorage(this.#SomeFifoName).then(res => {\n      localForage.setItem(this.#SomeFifoName, {\n        ...res,\n        [`${this.#SomeFifoName}Head`]: element,\n      });\n    });\n  }\n  pop_tail() {\n    return getStorage(this.#SomeFifoName).then(res => {\n      return (\n        delete res[`${this.#SomeFifoName}Tail`],\n        localForage.setItem(this.#SomeFifoName, res)\n      );\n    });\n  }\n  tail() {\n    return getStorage(this.#SomeFifoName).then(res =>\n      console.log(\n        `Tail element ${this.#SomeFifoName}LastIndex: `,\n        res[`${this.#SomeFifoName}LastIndex`]\n      )\n    );\n  }\n  head() {\n    return getStorage(this.#SomeFifoName).then(res =>\n      console.log(\n        `Head element ${this.#SomeFifoName}Head: `,\n        res[`${this.#SomeFifoName}Head`]\n      )\n    );\n  }\n}\n\nconst fifo = new Queue('SomeFifoName');\n"],"names":["Object","defineProperty","module","exports","value","default","receiver","privateMap","action","has","TypeError","get","descriptor","call","obj","privateCollection","set","writable","key","enumerable","configurable","$665014edacbfe17b$exports","instance","Constructor","$37616d1d2d9e1de3$exports","$37616d1d2d9e1de3$var$_classExtractFieldDescriptor","$37616d1d2d9e1de3$var$_classApplyDescriptorGet","$37616d1d2d9e1de3$var$_interopRequireDefault","parcelRequire","__esModule","$665bb80dc57e205a$exports","$665bb80dc57e205a$var$_checkPrivateRedeclaration","$a11a0d8e92c06afc$exports","$a11a0d8e92c06afc$var$_classExtractFieldDescriptor","$a11a0d8e92c06afc$var$_classApplyDescriptorSet","$a11a0d8e92c06afc$var$_interopRequireDefault","$74e7f8130373505f$var$_defineProperties","target","props","i","length","$74e7f8130373505f$exports","protoProps","staticProps","prototype","$9eddae5a012cde57$exports","arguments","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","forEach","$9eddae5a012cde57$var$_defineProperty","$9eddae5a012cde57$var$_interopRequireDefault","$f59351132b4b3cee$exports","constructor","Symbol","$14091752d54ec0a0$exports","e1","t","n","r","s","o","u","a","undefined","f","Error","code","l","e","_$n","o1","_dereq_","global","scheduleDrain","draining","Mutation","MutationObserver","WebKitMutationObserver","called","observer","nextTick","element","document","createTextNode","observe","characterData","data","setImmediate","MessageChannel","createElement","scriptEl","onreadystatechange","parentNode","removeChild","documentElement","appendChild","setTimeout","channel","port1","onmessage","port2","postMessage","queue","oldQueue","len","immediate","task","push","this","$parcel$global","self","window","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","Promise","resolver","state","outcome","safelyResolveThenable","QueueItem","promise","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","func","returnValue","reject","resolve","getThen","then","apply","thenable","onError","onSuccess","tryToUnwrap","result","tryCatch","status","out","reason","all","iterable","toString","values","Array","resolved","i1","allResolver","resolveFromAll","outValue","error","race","response","_typeof","$parcel$interopDefault","iterator","_classCallCheck","getIDB","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","idb1","isIndexedDBValid","open","isSafari","openDatabase","test","navigator","userAgent","platform","hasFetch","fetch","indexOf","IDBKeyRange","createBlob","parts","properties","Blob","name","builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","append","getBlob","type","Promise$1","executeCallback","callback","executeTwoCallbacks","errorCallback","normalizeKey","console","warn","String","getCallback","DETECT_BLOB_SUPPORT_STORE","supportsBlobs","dbContexts","READ_ONLY","READ_WRITE","_binStringToArrayBuffer","bin","_$length","buf","ArrayBuffer","arr","Uint8Array","charCodeAt","_checkBlobSupportWithoutCaching","idb","txn","transaction","blob","objectStore","put","onabort","preventDefault","stopPropagation","oncomplete","matchedChrome","match","matchedEdge","parseInt","_checkBlobSupport","_deferReadiness","dbInfo","dbContext","deferredOperation","deferredOperations","dbReady","_advanceReadiness","pop","_rejectReadiness","err","_getConnection","upgradeNeeded","createDbContext","db","close","dbArgs","version","openreq","onupgradeneeded","createObjectStore","storeName","oldVersion","ex","newVersion","onerror","onsuccess","onversionchange","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","objectStoreNames","contains","isDowngrade","isUpgrade","incVersion","_encodeBlob","reader","FileReader","onloadend","base64","btoa","__local_forage_encoded_blob","readAsBinaryString","_decodeBlob","encodedBlob","atob","_isEncodedBlob","_fullyReady","_initReady","_dbInfo","_tryReconnect","forages","i2","forage","createTransaction","mode","retries","tx","_initStorage","options","ready","initPromises","ignoreErrors","j","slice","_defaultConfig","k","getItem","req","iterate","openCursor","iterationNumber","cursor","setItem","value1","blobSupport","store","_$err","removeItem","clear","count","key1","advanced","openKeyCursor","advance","keys1","_$keys","dropInstance","currentConfig","config","dbPromise","db2","deleteObjectStore","_$db","_forage2","db1","i3","deleteDatabase","onblocked","asyncStorage","_driver","_support","isWebSQLValid","BASE_CHARS","BLOB_TYPE_PREFIX","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER","SERIALIZED_MARKER_LENGTH","TYPE_ARRAYBUFFER","TYPE_BLOB","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT16ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","TYPE_SERIALIZED_MARKER_LENGTH","toString$1","stringToBuffer","serializedString","encoded1","encoded2","encoded3","encoded4","bufferLength","p","buffer","bytes","bufferToString","base64String","substring","serialize","valueType","marker","fileReader","onload","str","readAsArrayBuffer","JSON","stringify","deserialize","parse","blobType","matcher","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","localforageSerializer","createDbTable","executeSql","_initStorage$1","dbInfoPromise","description","size","serializer","tryExecuteSql","t1","sqlStatement","args","t2","SYNTAX_ERR","results","rows","getItem$1","item","iterate$1","_setItem","value2","retriesLeft","originalValue","error1","sqlError","QUOTA_ERR","setItem$1","removeItem$1","clear$1","length$1","c","key$1","keys$1","getAllStoreNames","storeNames","dropInstance$1","operationInfo","resolve1","reject1","dropTable","operations","webSQLStorage","isLocalStorageValid","localStorage","_getKeyPrefix","defaultConfig","keyPrefix","checkIfLocalStorageThrows","localStorageTestKey","_isLocalStorageUsable","_initStorage$2","clear$2","_$key","getItem$2","iterate$2","keyPrefixLength","key$2","keys$2","itemKey","length$2","removeItem$2","setItem$2","value3","dropInstance$2","localStorageWrapper","sameValue","x","y","isNaN","includes","array","searchElement","isArray","arg","DefinedDrivers","DriverSupport","DefaultDrivers","INDEXEDDB","WEBSQL","LOCALSTORAGE","DefaultDriverOrder","OptionalDriverMethods","LibraryMethods","DefaultConfig","driver","callWhenReady","localForageInstance","libraryMethod","_args","extend","_key","hasOwnProperty","LocalForage1","LocalForage","driverTypeKey","driverName","defineDriver","_config","_driverSet","_initDriver","_ready","_wrapLibraryMethodsWithReady","setDriver","replace","driverObject","promise1","complianceError","driverMethods","driverMethodName","configureMissingMethods","methodNotImplementedFactory","methodName","_i","_len","optionalDriverMethod","setDriverSupport","support","info","getDriver","getDriverPromise","getSerializer","serializerPromise","drivers","supportedDrivers1","_getSupportedDrivers","setDriverToConfig","extendSelfWithDriver","_extend","initDriver","supportedDrivers","currentDriverIndex","driverPromiseLoop","oldDriverSetDone","supports","libraryMethodsAndProperties","createInstance","localforage_js","$a4faffbfed8ce8b6$var$getRandomValues","$cb482a25fa64fd81$export$2e2bcd8739ae039","randomUUID","crypto","bind","$a4faffbfed8ce8b6$var$rnds8","$a4faffbfed8ce8b6$export$2e2bcd8739ae039","getRandomValues","$489cbfc69d38cb8e$var$byteToHex","$489cbfc69d38cb8e$var$i","$489cbfc69d38cb8e$export$8fb373d660548968","offset","toLowerCase","$d0666643e2ee88b4$export$2e2bcd8739ae039","rnds","random","rng","$b8f9b7833fa37166$var$_SomeFifoName","WeakMap","Queue","SomeFifoName","_obj","id","elementId","getStorage","_this2","_obj1","$hKHmD","_this1","res","_this","log"],"version":3,"file":"index.c28a9eac.js.map"}